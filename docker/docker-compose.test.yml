
services:
  test:
    build:
      context: .
      dockerfile: docker/test/Dockerfile
    volumes:
      - .:/app              # makes output/ and coverage.xml accessible outside container
    env_file:
      - .env                # for ENV, DEBUG, etc.
    environment:
      ALPACA_API_KEY: ${ALPACA_API_KEY}
      ALPACA_SECRET_KEY: ${ALPACA_SECRET_KEY}
    depends_on:
      timescaledb:
        condition: service_healthy
    working_dir: /app
    command: pytest --cov=src --cov-report=term --cov-report=xml

  timescaledb:
    image: timescale/timescaledb:latest-pg14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 3s
      retries: 10
